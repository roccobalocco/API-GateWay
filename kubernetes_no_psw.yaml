apiVersion: v1
kind: Namespace
metadata:
  name: cloudmare

---

apiVersion: v1
kind: Secret
metadata:
  name: mssql-secret
  namespace: cloudmare
type: Opaque
stringData:
  SA_PASSWORD: "sa_sa_prova"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mssql-pvc
  namespace: cloudmare
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql
  namespace: cloudmare
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      containers:
        - name: mssql
          image: mcr.microsoft.com/mssql/server:2019-latest
          ports:
            - containerPort: 1433
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-secret
                  key: SA_PASSWORD
          volumeMounts:
            - name: mssql-storage
              mountPath: /var/opt/mssql
      volumes:
        - name: mssql-storage
          persistentVolumeClaim:
            claimName: mssql-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: mssql
  namespace: cloudmare
spec:
  ports:
    - port: 1433
      targetPort: 1433
  selector:
    app: mssql

---

# Template per microservizio (ripetere per BookMS, RoomMS, etc.)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookms
  namespace: cloudmare
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookms
  template:
    metadata:
      labels:
        app: bookms
    spec:
      containers:
        - name: bookms
          image: roccobalocco/cloudmare-bookms:latest
          ports:
            - containerPort: 80
          env:
            - name: ConnectionStrings__DefaultConnection
              value: "Server=mssql;Database=BookDb;User=sa;Password=sa_sa_prova"

---

apiVersion: v1
kind: Service
metadata:
  name: bookms
  namespace: cloudmare
spec:
  ports:
    - port: 80
  selector:
    app: bookms

---

# Api Gateway
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apigateway
  namespace: cloudmare
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apigateway
  template:
    metadata:
      labels:
        app: apigateway
    spec:
      containers:
        - name: apigateway
          image: roccobalocco/cloudmare-apigateway:latest
          ports:
            - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: apigateway
  namespace: cloudmare
spec:
  type: LoadBalancer
  ports:
    - port: 80
  selector:
    app: apigateway
